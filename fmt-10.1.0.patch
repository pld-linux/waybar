From c8237437d27fa255f4d8a380dec6db872d139e7d Mon Sep 17 00:00:00 2001
From: Jan Palus <jpalus@fastmail.com>
Date: Tue, 15 Aug 2023 20:57:07 +0200
Subject: [PATCH] Explicitly cast ustring to string when passing to fmt

don't rely on implicit conversion which is no longer present in fmt
10.1.0

Fixes #2403
---
 include/util/format.hpp  | 2 +-
 src/modules/sni/item.cpp | 2 +-
 2 files changed, 2 insertions(+), 2 deletions(-)

diff --git a/include/util/format.hpp b/include/util/format.hpp
index 00b6a31..069d889 100644
--- a/include/util/format.hpp
+++ b/include/util/format.hpp
@@ -93,7 +93,7 @@ template <>
 struct formatter<Glib::ustring> : formatter<std::string> {
   template <typename FormatContext>
   auto format(const Glib::ustring& value, FormatContext& ctx) {
-    return formatter<std::string>::format(value, ctx);
+    return formatter<std::string>::format(static_cast<std::string>(value), ctx);
   }
 };
 }  // namespace fmt
diff --git a/src/modules/sni/item.cpp b/src/modules/sni/item.cpp
index 9d3fc4b..871621f 100644
--- a/src/modules/sni/item.cpp
+++ b/src/modules/sni/item.cpp
@@ -22,7 +22,7 @@ struct fmt::formatter<Glib::VariantBase> : formatter<std::string> {
   template <typename FormatContext>
   auto format(const Glib::VariantBase& value, FormatContext& ctx) {
     if (is_printable(value)) {
-      return formatter<std::string>::format(value.print(), ctx);
+      return formatter<std::string>::format(static_cast<std::string>(value.print()), ctx);
     } else {
       return formatter<std::string>::format(value.get_type_string(), ctx);
     }
-- 
2.41.0

